# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install # will run `yarn install` command

      - name: Install dependencies and gems
        env:
          DATABASE_URL: postgres://postgres:secret_password@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0

          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Prepare Database
        env:
          DATABASE_URL: postgres://postgres:secret_password@localhost:5432/test
        run: |
          bundle exec rails db:prepare

      - name: Run Tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:secret_password@localhost:5432/test
        run: |
          bundle exec rails test

      - name: Create Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage/

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0

      - name: Bundler Audit
        uses: andrewmcodes/bundler-audit-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Security audit dependencies
#        run: |
#          gem install bundler-audit
#          bundler-audit --update

      # Brakeman: static analysis tool which checks Ruby on Rails applications for security vulnerabilities
      - name: Install Brakeman
        run: |
          gem install brakeman

      - name: Run Brakeman
        run: |
          brakeman -f json > tmp/brakeman.json || exit 0

      - name: Brakeman Report
        uses: devmasx/brakeman-linter-action@v1.0.0
        env:
          REPORT_PATH: tmp/brakeman.json
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Rubocop checks
        uses: luizfonseca/github-actions-rubocop@1.5.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint Ruby files
        run: |
          gem install rubocop-rails
          rubocop --parallel || exit 0